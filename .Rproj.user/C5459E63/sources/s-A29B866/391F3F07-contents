---
title: 'Series temporales, práctica 1: conjunto de datos meteorológicos de Granada-Cartuja medidos por AEMET.'
author: "Carlos Manuel Sequí Sánchez"
output: pdf_document
---

\section{Problema 1. ¿Qué valores de temperatura máxima, a escala mensual, se espera que tengan los meses de Marzo y de Abril de 2018?}
 
 
Primeramente leemos el conjunto de datos que contiene los siguientes atributos:
- Columna 1 : Identificador Estación 
- Columna 2 : Fecha 
- Columna 3 : Temperatura Máxima (ºC)
- Columna 4 : Hora Temperatura Máxima 
- Columna 5 : Temperatura mínima (ºC)
- Columna 6 : Hora Temperatura mínima 
- Columna 7 : Temperatura Media (ºC)
- Columna 8 : Racha máxima de viento (Km/h)
- Columna 9 : Hora de Racha Máxima 
- Columna 10 : Velocidad media de Viento (Km/h)
- Columna 11 : Hora de Velocidad Máxima de viento 
- Columna 12 : Precipitacion Total diaria (mm)
- Columna 13 : Precipitacion de 0 a 6 horas (mm)
- Columna 14 : Precipitacion de 6 a 12 horas (mm)
- Columna 15 : Precipitacion de 12 a 18 horas (mm)
- Columna 16 : Precipitacion de 18 a 24 horas (mm)

Librerías...
```{r}
library(tseries)
library(dplyr)
library(lubridate)
```

Leemos el dataset y, como solo nos interesa la fecha y la temperatura máxima nos quedamos con tan solo esos datos.
```{r}
datos = read.csv("5515X.csv", header = TRUE, sep=";")
datos = datos[,c("Fecha","Tmax")]
datos$Fecha = as.Date(datos$Fecha)
```


Veamos los valores NA...
```{r} 
apply(datos, 2, function(atributo){sum(is.na(atributo))})
```

Eliminamos las instancias(días) donde hay al menos algún valor NA de temperatura máxima
```{r}
datos = datos[complete.cases(datos),]
```

La serie que nos interesa es la temperatura máxima de cada uno de los meses, es decir, obtenemos la temperatura máxima de cada mes de cada año:
```{r}
# agrupamos por año y mes y tomamos el maximo de cada uno
datos = datos %>%
mutate(month = format(Fecha, "%m"), year = format(Fecha, "%Y")) %>%
group_by(year, month) %>%
summarise(total = max(Tmax))

serie = datos$total # aqui estan las temperaturas máximas de cada mes de todos los años
```

Obtenemos ahora la cantidad de datos a predecir y la serie temporal en sí
```{r}
Npred = 2 # cantidad de datos a predecir (temperaturas máximas de marzo y abril)
serie.ts = ts(serie, frequency = 12) # frequency set to 12 to set stationality each 12 months
plot(decompose(serie.ts))
```

Observamos en la gráfica:  
-los valores de la serie  
-la tendencia calculada mediante filtros  
-la estacionalidad repetida cada 12 instantes de tiempo
-lo que queda de la serie al eliminar tendencia y estacionalidad


Aplicamos una transformación logarítmica para evitar problemas 
```{r}

```






































