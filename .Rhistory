library(tseries)
serie = read.csv("5515X.csv", header = TRUE, sep=";")
apply(serie, 2, function(atributo){sum(is.na(atributo))})
head(serie)
tail(serie)
Ntest = 28 # number of data that I will use for test
Npred = 2 # number of data that I want to predict (March and April's maximun temperature)
srie.ts = ts(serie, frequency = 12) # frequency set to 12 to set stationality each 12 months
plot(decompose(serie.ts))
Ntest = 28 # number of data that I will use for test
Npred = 2 # number of data that I want to predict (March and April's maximun temperature)
serie.ts = ts(serie, frequency = 12) # frequency set to 12 to set stationality each 12 months
plot(decompose(serie.ts))
noNaSerie = serie[apply(serie, 2,-( function(atributo){sum(is.na(atributo))})),]
noNaSerie = apply(serie, 1, function(instance){ifelse(anyNA(instance),instance)})
noNaSerie = apply(serie, 1, function(instance){ifelse(anyNA(instance),instance,NA)})
apply(noNaSerie, 2, function(atributo){sum(is.na(atributo))})
noNaSerie = apply(serie, 1, function(instance){if(anyNA(instance),instance)})
noNaSerie = apply(serie, 1, function(instance){if(anyNA(instance)instance)})
noNaSerie = apply(serie, 1, function(instance){if(anyNA(instance))instance)})
noNaSerie = apply(serie, 1, function(instance){if(anyNA(instance))instance})
head(noNaSerie)
library(tseries)
serie = read.csv("5515X.csv", header = TRUE, sep=";")
apply(serie, 2, function(atributo){sum(is.na(atributo))})
serie = serie[complete.cases(serie)]
serie = serie[complete.cases(serie),]
Ntest = 28 # number of data that I will use for test
Npred = 2 # number of data that I want to predict (March and April's maximun temperature)
serie.ts = ts(serie, frequency = 12) # frequency set to 12 to set stationality each 12 months
plot(decompose(serie.ts))
head(serie)
library(tseries)
serie = read.csv("5515X.csv", header = TRUE, sep=";")
apply(serie, 2, function(atributo){sum(is.na(atributo))})
head(serie)
serie = serie[complete.cases(serie),]
Ntest = 28 # number of data that I will use for test
Npred = 1 # number of data that I want to predict (March and April's maximun temperature)
serie.ts = ts(serie, frequency = 12) # frequency set to 12 to set stationality each 12 months
plot(decompose(serie.ts))
Ntest = 28 # number of data that I will use for test
Npred = 1 # number of data that I want to predict (March and April's maximun temperature)
serie.ts = ts(serie, frequency = 10) # frequency set to 12 to set stationality each 12 months
plot(decompose(serie.ts))
Ntest = 10 # number of data that I will use for test
Npred = 1 # number of data that I want to predict (March and April's maximun temperature)
serie.ts = ts(serie, frequency = 10) # frequency set to 12 to set stationality each 12 months
plot(decompose(serie.ts))
Ntest = 2 # number of data that I will use for test
Npred = 2 # number of data that I want to predict (March and April's maximun temperature)
serie.ts = ts(serie, frequency = 12) # frequency set to 12 to set stationality each 12 months
plot(decompose(serie.ts))
